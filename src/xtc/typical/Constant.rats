/*
 * xtc - The eXTensible Compiler
 * Copyright (C) 2007 New York University
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 * USA.
 */

/**
 * Definition of Typical constants.
 *
 * @author Laune Harris, Anh Le
 * @version $Revision: 1.2 $
 */
module xtc.typical.Constant(Identifier, Spacing);

import Identifier;
import Spacing;

Node Constant = 
    FloatingLiteral Spacing
  / IntegerLiteral Spacing
  / StringLiteral
  / BooleanLiteral
  ;

generic IntegerLiteral =
    <Decimal> DecimalLiteral
  ;

generic FloatingLiteral =
    <FloatingDecimal>	DecimalFloatingLiteral
  ;
 
transient String Digit = [0-9] ;

String DecimalLiteral = Digit Digit* ;

String DecimalFloatingLiteral =
    Digit+ '.' Digit* Exponent?
  / '.' Digit+ Exponent?
  ;

String Exponent = [eE] [+\-]? Digit+ ;

generic StringLiteral    = StringConstant ;

String StringConstant    = ["] ( EscapeSequence / !["\\] _ )* ["] ;

transient String EscapeSequence =  '\\' [btnfr"'\\] ;

inline generic BooleanLiteral =
    "true":Keyword Spacing
  / "false":Keyword Spacing
  ;

inline generic Bottom =
    void:"bottom":Keyword 
  ;
